Start




	map-the-debris.txt

function orbitalPeriod(arr) {
  let newArr = []
  var GM = 398600.4418;
  var earthRadius = 6367.4447;
  for (let i in arr){
    let h = arr[i]['avgAlt']+earthRadius
    let n = 4*Math.pow(Math.PI,2)*Math.pow(h,3)
    let x = n/GM
    let oP = Math.round(Math.sqrt((x)))
    newArr.push({name:arr[i]['name'],orbitalPeriod: oP})
  }
  return newArr;
}

console.log(orbitalPeriod([{name : "sputnik", avgAlt : 35873.5553}]));
console.log(orbitalPeriod([{name: "iss", avgAlt: 413.6}, {name: "hubble", avgAlt: 556.7}, {name: "moon", avgAlt: 378632.553}]))




	palindrome-checker.txt

function palindrome(str) {
  str = str.replace(/[^A-Za-z0-9]/g,'').toLowerCase()
  let compStr = str.split('').reverse().join('')
  return (compStr==str);
}



console.log(palindrome("A man, a plan, a canal. Panama"))





	roman-numeral-converter.txt

function convertToRoman(num) {
    let romanBank = {'M':1000,"CM":900,'D':500,'CD':400,'C':100,'XC':90,"L":50,'XL':40,'X':10,'IX':9,'V':5,'IV':4,'I':1};
    let ans = '';
    let c_rmn;
    for (let letter in romanBank){
        c_rmn = Math.floor(num/romanBank[letter])
        
        if (c_rmn >= 0){
            for (let i=0;i<c_rmn;i++){
                ans += letter
            }
        }
        num = num%romanBank[letter]
    }
 return ans;
}

console.log(convertToRoman(36))





	caesars-cipher.txt

function rot13(str) { // LBH QVQ VG!
let ref = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
let ans = '';
for (let letter in str){
  let idx = ref.indexOf(str[letter]);
    if (idx < 0){
      ans += str[letter]
    }else if (idx<13){
      ans += ref[idx+13]
    }else {ans += ref[idx-13]}
    }
  return ans;
}

// Change the inputs below to test
rot13("SERR PBQR PNZC");





	telephone-number-validator.txt

function telephoneCheck(str) {
  let len = str.match(/[()0-9]+/g).join('').length
  console.log(str.match(/[()0-9]+/g).join(''))
  let val = str.match(/[()0-9]+/g).join('')
  if (str[0]=='-'){
    return false
  }
  else if (len==13){console.log(val[0])
    if (val[0]==='1'){
      if ((val[1]=='(') && (val[5]==')')){
        return true
      }
    }
  }else if (len == 12){
    if ((val[0]=='(')&&(val[4]==')')){
      return true
    }
  }else if (len==11){
    if (val[0]==1){
      return true
    }
  }else if (len==10){
    return true
  }
  
  return false;
}

console.log(telephoneCheck("-1 (757) 622-7382"))





	cash-register.txt

function checkCashRegister(price, cash, cid) {
  let vals = [.01,.05,.1,.25,1,5,10,20,100]
  //set up initial variables
  var changeDue = cash-price.toFixed(2);
  let stat = 'OPEN';
  let tot_cid = cid.reduce(function(a,b){return a+b[1]},0).toFixed(2)
  let ch_obj = []
  //check if register has enough funds
  if (changeDue > tot_cid){
    stat = 'INSUFFICIENT_FUNDS'
    return {status:stat,change:[]}
  }else {
    for (let i=vals.length-1;i>=0;i--){      
      var fact = (changeDue/vals[i]).toFixed(2)      
      if (changeDue>=vals[i]){
        if (cid[i][1]>=vals[i]){
        let denoms = Math.floor(Math.min(changeDue.toFixed(2)/vals[i],cid[i][1]/vals[i]))
        ch_obj.push([cid[i][0],denoms*vals[i]])
        console.log(ch_obj)
        changeDue -= denoms*vals[i]
        }
      }
    }
    let cha = cid.reduce(function(a,b){return a+b[1]},0)
    let ocha = ch_obj.reduce(function(a,b){return a+b[1]},0)
    if (cha > ocha){
      if (ch_obj.reduce(function(a,b){return a+b[1]},0).toFixed(2)==
    cash-price.toFixed(2)){
      return {status:stat,change:ch_obj}
    }else return {status:'INSUFFICIENT_FUNDS',change:[]}
    }
    if (ch_obj.reduce(function(a,b){return a+b[1]},0).toFixed(2)==
    cash-price.toFixed(2)){
      if (cid.reduce(function(a,b){return a+b[1]},0).toFixed(2) == ch_obj.reduce(function(a,b){return a+b[1]},0).toFixed(2)){stat = 'CLOSED'
      return {status:stat,change:cid};
      }else{
        return {status:'INSUFFICIENT_FUNDS',change:[]}
      }
    }
    }
}
  // Here is your change, ma'am.
  


// Example cash-in-drawer array:
// [["PENNY", 1.01],
// ["NICKEL", 2.05],
// ["DIME", 3.1],
// ["QUARTER", 4.25],
// ["ONE", 90],
// ["FIVE", 55],
// ["TEN", 20],
// ["TWENTY", 60],
// ["ONE HUNDRED", 100]]

console.log(checkCashRegister(19.5, 20, [["PENNY", 0.01], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 1], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]))



